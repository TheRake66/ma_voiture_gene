import Http from"../communication/Http.min.js";import Builder from"../html/builder.min.js";import Dom from"../html/dom.min.js";import Parser from"./parser.min.js";
/**
 * Librairie de traitement des URL.
 * 
 * @author Thibault Bustos (TheRake66)
 * @version 1.0
 * @category Framework source
 * @license MIT License
 * @copyright Â© 2022 - Thibault BUSTOS (TheRake66)
 */export default class Location{static change(t){window.location.href=t}static reload(){window.location.reload()}static go(t,e=[],r=!1,o=Http.METHOD_GET){if(o===Http.METHOD_GET)window.location.href=Location.build(t,e,r);else if(o===Http.METHOD_POST){let e=Builder.create("form",{method:"post",action:Location.build(t)});Object.entries(obj).forEach((t=>{const[r,o]=t;e.append(Builder.create("input",{type:"hidden",name:r,value:o}))})),r&&e.append(Builder.create("input",{type:"hidden",name:"redirect_url",value:Parser.current()})),Builder.append(e),e.submit(),e.remove()}}static build(t,e={},r=!1){let o=Parser.root()+t;return r&&(e.redirect_url=Parser.current()),(0!==Object.keys(e).length||r)&&(o+="?"+new URLSearchParams(e).toString()),o}}
